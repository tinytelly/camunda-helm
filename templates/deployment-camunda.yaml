apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "camunda-helm.fullname" . }}
  labels:
    {{- include "camunda-helm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "camunda-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "camunda-helm.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "camunda-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ required "applicationPort " .Values.applicationPort  }}
              protocol: TCP
          env:
            - name: DB_URL-Z
              value: jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/{{ required "postgresql.postgresqlDatabase " .Values.postgresql.postgresqlDatabase  }}
            - name: DB_USERNAME-Z
              value: {{ required "postgresql.postgresqlUsername " .Values.postgresql.postgresqlUsername  }}
            - name: DB_PASSWORD-Z
              value: {{ required "postgresql.postgresqlPassword " .Values.postgresql.postgresqlPassword  }}
            - name: DB_DRIVER-Z
              value: org.postgresql.Driver
          livenessProbe:
            httpGet:
              path: {{ required "livenessPath" .Values.livenessPath  }}
              port: {{  required "applicationPort " .Values.applicationPort  }}
            initialDelaySeconds: {{  required "livenessDelay " .Values.livenessDelay  }}
            timeoutSeconds: {{  required "livenessTimeout " .Values.livenessTimeout  }}
            periodSeconds: {{  required "livenessPeriod " .Values.livenessPeriod  }}
            failureThreshold: {{  required "livenessFailureThreshold  " .Values.livenessFailureThreshold   }}
          readinessProbe:
            httpGet:
              path: {{ required "readinessPath" .Values.readinessPath   }}
              port: {{  required "applicationPort" .Values.applicationPort  }}
            initialDelaySeconds: {{  required "readinessDelay " .Values.readinessDelay  }}
            timeoutSeconds: {{  required "readinessTimeout " .Values.readinessTimeout  }}
            periodSeconds: {{  required "readinessPeriod " .Values.readinessPeriod  }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
